{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/semanticAnalysis.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\n\ninterface WordEmbedding {\n  [word: string]: number[];\n}\n\ntype Vector = number[];\ntype CategoryWords = { [category: string]: string[] };\n\n// Spanish word embeddings (simplified version for common terms)\nconst wordEmbeddings: WordEmbedding = {\n  // Compensación\n  'sueldo': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  'salario': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  'pago': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  'aumento': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  'incremento': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  'prestaciones': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  'beneficios': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  \n  // Horario\n  'horario': [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  'turno': [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  'jornada': [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  'tiempo': [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  'schedule': [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n  \n  // Ambiente\n  'ambiente': [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n  'clima': [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n  'laboral': [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n  'equipo': [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n  'compañeros': [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n  'trato': [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n  \n  // Desarrollo\n  'capacitacion': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  'capacitación': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  'desarrollo': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  'aprendizaje': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  'formación': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  'crecimiento': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  'carrera': [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n  \n  // Cuidado de hijos\n  'hijos': [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n  'niños': [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n  'familia': [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n  'guardería': [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n  'maternal': [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n  \n  // Transporte\n  'transporte': [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n  'traslado': [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n  'viaje': [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n  'distancia': [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n  'ubicación': [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n  \n  // Salud\n  'salud': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n  'enfermedad': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n  'médico': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n  'tratamiento': [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n  \n  // Estudios\n  'universidad': [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n  'escuela': [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n  'estudiar': [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n  'educación': [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n  'título': [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n  \n  // Mejor oferta\n  'mejor oferta': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n  'otra empresa': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n  'competencia': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n  'oportunidad': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n  'propuesta': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n  \n  // Personal\n  'personal': [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  'mudanza': [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  'cambio de residencia': [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  'matrimonio': [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  'embarazo': [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n};\n\nconst categories: CategoryWords = {\n  'compensacion': ['sueldo', 'salario', 'pago', 'aumento', 'incremento', 'prestaciones', 'beneficios'],\n  'horario': ['horario', 'turno', 'jornada', 'tiempo', 'schedule'],\n  'ambiente': ['ambiente', 'clima', 'laboral', 'equipo', 'compañeros', 'trato'],\n  'desarrollo': ['capacitacion', 'capacitación', 'desarrollo', 'aprendizaje', 'formación', 'crecimiento', 'carrera'],\n  'cuidado_hijos': ['hijos', 'niños', 'familia', 'cuidado familiar', 'guardería', 'maternal'],\n  'transporte': ['transporte', 'traslado', 'viaje', 'distancia', 'ubicación'],\n  'salud': ['salud', 'enfermedad', 'médico', 'tratamiento', 'condición'],\n  'estudios': ['universidad', 'escuela', 'estudiar', 'educación', 'título'],\n  'mejor_oferta': ['mejor oferta', 'otra empresa', 'competencia', 'oportunidad', 'propuesta'],\n  'personal': ['personal', 'mudanza', 'cambio de residencia', 'matrimonio', 'embarazo']\n};\n\nexport class SemanticAnalyzer {\n  private tokenize(text: string): string[] {\n    // Simple tokenizer that splits on spaces and removes punctuation\n    return text.toLowerCase()\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n      .split(/\\s+/);\n  }\n\n  private getWordVector(word: string): Vector {\n    word = word.toLowerCase();\n    return wordEmbeddings[word] || Array(5).fill(0);\n  }\n\n  private getSentenceVector(text: string): Vector {\n    const tokens = this.tokenize(text);\n    const vectors = tokens.map(token => this.getWordVector(token));\n    if (vectors.length === 0) return Array(5).fill(0);\n    \n    // Calculate average vector\n    return vectors.reduce((acc, vec) => {\n      return acc.map((val, idx) => val + vec[idx]);\n    }).map(val => val / vectors.length);\n  }\n\n  private cosineSimilarity(vec1: Vector, vec2: Vector): number {\n    const dotProduct = vec1.reduce((acc, val, idx) => acc + val * vec2[idx], 0);\n    const norm1 = Math.sqrt(vec1.reduce((acc, val) => acc + val * val, 0));\n    const norm2 = Math.sqrt(vec2.reduce((acc, val) => acc + val * val, 0));\n    return dotProduct / (norm1 * norm2);\n  }\n\n  private findBestCategory(text: string): string {\n    text = text.toLowerCase();\n    \n    // First try direct word matching\n    for (const [category, words] of Object.entries(categories)) {\n      if (words.some(word => text.includes(word.toLowerCase()))) {\n        return category;\n      }\n    }\n\n    // If no direct match, try vector similarity\n    const textVector = this.getSentenceVector(text);\n    let bestCategory = '';\n    let maxSimilarity = -1;\n\n    for (const [category, words] of Object.entries(categories)) {\n      const categoryVectors = words.map(word => this.getWordVector(word));\n      const avgCategoryVector = categoryVectors.reduce((acc, vec) => {\n        return acc.map((val, idx) => val + vec[idx]);\n      }).map(val => val / categoryVectors.length);\n\n      const similarity = this.cosineSimilarity(textVector, avgCategoryVector);\n      if (similarity > maxSimilarity) {\n        maxSimilarity = similarity;\n        bestCategory = category;\n      }\n    }\n\n    return maxSimilarity > 0.2 ? bestCategory : 'otros';\n  }\n\n  public groupResponses(responses: string[]): Map<string, string[]> {\n    const groups = new Map<string, string[]>();\n\n    responses.forEach(response => {\n      if (!response) return;\n      const category = this.findBestCategory(response);\n      \n      if (!groups.has(category)) {\n        groups.set(category, []);\n      }\n      groups.get(category)!.push(response);\n    });\n\n    return groups;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/analysis.ts"],"sourcesContent":["import { SemanticAnalyzer } from './semanticAnalysis';\n\nconst semanticAnalyzer = new SemanticAnalyzer();\n\ninterface Category {\n  name: string;\n  count: number;\n  percentage: number;\n  responses?: string[];\n}\n\nexport interface AnalysisResult {\n  clusteredData: any[];\n  paretoData: { group: string; frequency: number; percentage: number; cumulativePercentage: number }[];\n  groupDescriptions: Record<string, string>;\n  motivoAnalysis: {\n    total: number;\n    categories: Category[];\n  };\n  encuestaAnalysis: {\n    byQuestion: {\n      [questionNumber: string]: {\n        total: number;\n        categories: Category[];\n      };\n    };\n    overall: {\n      total: number;\n      categories: Category[];\n    };\n  };\n}\n\nfunction cleanText(text: string): string {\n  return text?.toString().trim().toLowerCase() || '';\n}\n\ninterface NumberedResponse {\n  number: number;\n  text: string;\n}\n\nfunction splitNumberedResponses(text: string): NumberedResponse[] {\n  if (!text) return [];\n  \n  const responses: NumberedResponse[] = [];\n  const matches = text.matchAll(/(\\d+)\\.\\s*([^0-9.]+)(?=\\d+\\.|$)/g);\n  \n  for (const match of matches) {\n    const number = parseInt(match[1]);\n    const responseText = match[2].trim();\n    if (responseText.length > 0) {\n      responses.push({ number, text: responseText });\n    }\n  }\n  \n  return responses;\n}\n\nfunction findSemanticCategory(text: string): string | null {\n  const neuralGroups = semanticAnalyzer.groupResponses([text]);\n  const category = Array.from(neuralGroups.keys())[0];\n  return category !== 'otros' ? category : null;\n}\n\nfunction groupSimilarTexts(texts: string[]): Map<string, string[]> {\n  return semanticAnalyzer.groupResponses(texts);\n}\n\nexport function performAnalysis(data: any[]): AnalysisResult {\n  // Process Motivo Pregunta 1\n  const motivos = data\n    .map(row => cleanText(row[\"Motivo Pregunta 1\"]))\n    .filter(Boolean);\n  \n  const motivoGroups = groupSimilarTexts(motivos);\n  const motivoCategories = Array.from(motivoGroups.entries()).map(([key, texts]) => ({\n    name: key,\n    count: texts.length,\n    percentage: (texts.length / motivos.length) * 100\n  })).sort((a, b) => b.count - a.count);\n\n  // Process encuesta de salida with numbered responses\n  const allEncuestas = data\n    .map(row => {\n      const rawText = row[\"encuesta de salida\"] || row[\"Encuesta de salida 4FRH-209\"];\n      if (!rawText) return [];\n      return splitNumberedResponses(cleanText(rawText));\n    })\n    .flat()\n    .filter(Boolean);\n\n  // Group responses by question number\n  const encuestasByQuestion: { [key: number]: string[] } = {};\n  allEncuestas.forEach(response => {\n    if (!encuestasByQuestion[response.number]) {\n      encuestasByQuestion[response.number] = [];\n    }\n    encuestasByQuestion[response.number].push(response.text);\n  });\n\n  // Analyze each question separately\n  const encuestaAnalysisByQuestion: { [key: string]: any } = {};\n  Object.entries(encuestasByQuestion).forEach(([questionNum, responses]) => {\n    const groups = groupSimilarTexts(responses);\n    const categories = Array.from(groups.entries()).map(([key, texts]) => ({\n      name: key,\n      count: texts.length,\n      percentage: (texts.length / responses.length) * 100,\n      responses: texts\n    })).sort((a, b) => b.count - a.count);\n\n    encuestaAnalysisByQuestion[questionNum] = {\n      total: responses.length,\n      categories\n    };\n  });\n\n  // Overall analysis for all encuesta responses\n  const allResponses = allEncuestas.map(r => r.text);\n  const overallGroups = groupSimilarTexts(allResponses);\n  const overallCategories = Array.from(overallGroups.entries()).map(([key, texts]) => ({\n    name: key,\n    count: texts.length,\n    percentage: (texts.length / allResponses.length) * 100,\n    responses: texts\n  })).sort((a, b) => b.count - a.count);\n\n  // Create clusters based on combined analysis\n  const allPhrases = [...new Set([...motivos, ...allResponses])];\n  const clusters: Record<number, string[]> = {};\n  \n  allPhrases.forEach((phrase, index) => {\n    const key = index % 5; // Distribute into 5 clusters\n    if (!clusters[key]) clusters[key] = [];\n    clusters[key].push(phrase);\n  });\n\n  // Map phrases to clusters\n  const phraseToCluster: Record<string, number> = {};\n  Object.entries(clusters).forEach(([key, phrases]) => {\n    phrases.forEach(phrase => {\n      phraseToCluster[phrase] = Number(key);\n    });\n  });\n\n  // Add cluster info to data\n  const clusteredData = data.map(row => {\n    const motivo = cleanText(row[\"Motivo Pregunta 1\"]);\n    const encuesta = cleanText(row[\"encuesta de salida\"] || row[\"Encuesta de salida 4FRH-209\"]);\n    const cluster = phraseToCluster[motivo] ?? phraseToCluster[encuesta] ?? -1;\n    return { ...row, Cluster: cluster };\n  });\n\n  // Create group descriptions\n  const groupDescriptions: Record<string, string> = {};\n  Object.entries(clusters).forEach(([key, phrases]) => {\n    groupDescriptions[key] = phrases.slice(0, 2).join(\", \");\n  });\n\n  // Map group descriptions to rows\n  clusteredData.forEach(row => {\n    row[\"Grupo Descriptivo\"] = groupDescriptions[row.Cluster] || \"Sin Grupo\";\n  });\n\n  // Pareto analysis\n  const frequencyMap: Record<string, number> = {};\n  clusteredData.forEach(row => {\n    const group = row[\"Grupo Descriptivo\"];\n    frequencyMap[group] = (frequencyMap[group] || 0) + 1;\n  });\n\n  const total = clusteredData.length;\n  const paretoData = Object.entries(frequencyMap)\n    .map(([group, freq]) => ({\n      group,\n      frequency: freq,\n      percentage: (freq / total) * 100,\n      cumulativePercentage: 0\n    }))\n    .sort((a, b) => b.frequency - a.frequency);\n\n  let cumulative = 0;\n  paretoData.forEach(item => {\n    cumulative += item.percentage;\n    item.cumulativePercentage = cumulative;\n  });\n\n  return {\n    clusteredData,\n    paretoData,\n    groupDescriptions,\n    motivoAnalysis: {\n      total: motivos.length,\n      categories: motivoCategories\n    },\n    encuestaAnalysis: {\n      byQuestion: encuestaAnalysisByQuestion,\n      overall: {\n        total: allResponses.length,\n        categories: overallCategories\n      }\n    }\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 985, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { AnalysisResult } from \"../lib/analysis\";\n\ninterface DashboardProps {\n  analysis: AnalysisResult;\n}\n\nexport const Dashboard: React.FC<DashboardProps> = ({ analysis }) => {\n  const { paretoData, groupDescriptions, motivoAnalysis, encuestaAnalysis } = analysis;\n\n  return (\n    <div className=\"max-w-6xl mx-auto space-y-8\">\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Análisis de Motivos de Rotación</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr className=\"bg-gray-100\">\n                <th className=\"border p-2 text-left\">Motivo</th>\n                <th className=\"border p-2 text-right\">Cantidad</th>\n                <th className=\"border p-2 text-right\">Porcentaje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {motivoAnalysis.categories.map((category, idx) => (\n                <tr key={idx} className={category.percentage >= 20 ? \"bg-yellow-50\" : \"\"}>\n                  <td className=\"border p-2\">{category.name}</td>\n                  <td className=\"border p-2 text-right\">{category.count}</td>\n                  <td className=\"border p-2 text-right\">{category.percentage.toFixed(1)}%</td>\n                </tr>\n              ))}\n              <tr className=\"font-semibold bg-gray-50\">\n                <td className=\"border p-2\">Total</td>\n                <td className=\"border p-2 text-right\">{motivoAnalysis.total}</td>\n                <td className=\"border p-2 text-right\">100%</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Análisis de Encuestas de Salida</h2>\n        \n        {/* Analysis by Question */}\n        {Object.entries(encuestaAnalysis.byQuestion).map(([questionNum, questionData]) => (\n          <div key={questionNum} className=\"mb-8\">\n            <h3 className=\"text-xl font-semibold mb-4\">Pregunta {questionNum}</h3>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border-collapse\">\n                <thead>\n                  <tr className=\"bg-gray-100\">\n                    <th className=\"border p-2 text-left\">Comentario</th>\n                    <th className=\"border p-2 text-right\">Cantidad</th>\n                    <th className=\"border p-2 text-right\">Porcentaje</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {questionData.categories.map((category, idx) => (\n                    <tr key={idx} className={category.percentage >= 20 ? \"bg-yellow-50\" : \"\"}>\n                      <td className=\"border p-2\">\n                        <div className=\"font-medium capitalize text-blue-700\">\n                          {category.name}\n                        </div>\n                        {category.responses && category.responses.length > 0 && (\n                          <div className=\"text-sm text-gray-600 mt-2 space-y-1\">\n                            <div className=\"font-medium text-gray-700 mb-1\">Respuestas relacionadas:</div>\n                            {category.responses.map((response, i) => (\n                              <div key={i} className=\"ml-3 flex items-start\">\n                                <span className=\"mr-2\">•</span>\n                                <span className=\"flex-1\">{response}</span>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"border p-2 text-right align-top\">\n                        <span className=\"font-medium\">{category.count}</span>\n                      </td>\n                      <td className=\"border p-2 text-right align-top\">\n                        <span className=\"font-medium\">{category.percentage.toFixed(1)}%</span>\n                      </td>\n                    </tr>\n                  ))}\n                  <tr className=\"font-semibold bg-gray-50\">\n                    <td className=\"border p-2\">Total</td>\n                    <td className=\"border p-2 text-right\">{questionData.total}</td>\n                    <td className=\"border p-2 text-right\">100%</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        ))}\n\n        {/* Overall Analysis */}\n        <div className=\"mt-8 pt-8 border-t\">\n          <h3 className=\"text-xl font-semibold mb-4\">Análisis General</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse\">\n              <thead>\n                <tr className=\"bg-gray-100\">\n                  <th className=\"border p-2 text-left\">Categoría</th>\n                  <th className=\"border p-2 text-right\">Cantidad</th>\n                  <th className=\"border p-2 text-right\">Porcentaje</th>\n                </tr>\n              </thead>\n              <tbody>\n                {encuestaAnalysis.overall.categories.map((category, idx) => (\n                  <tr key={idx} className={category.percentage >= 20 ? \"bg-yellow-50\" : \"\"}>\n                    <td className=\"border p-2\">{category.name}</td>\n                    <td className=\"border p-2 text-right\">{category.count}</td>\n                    <td className=\"border p-2 text-right\">{category.percentage.toFixed(1)}%</td>\n                  </tr>\n                ))}\n                <tr className=\"font-semibold bg-gray-50\">\n                  <td className=\"border p-2\">Total</td>\n                  <td className=\"border p-2 text-right\">{encuestaAnalysis.overall.total}</td>\n                  <td className=\"border p-2 text-right\">100%</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Análisis de Pareto</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr className=\"bg-gray-100\">\n                <th className=\"border p-2 text-left\">Grupo</th>\n                <th className=\"border p-2 text-right\">Frecuencia</th>\n                <th className=\"border p-2 text-right\">Porcentaje</th>\n                <th className=\"border p-2 text-right\">Porcentaje Acumulado</th>\n              </tr>\n            </thead>\n            <tbody>\n              {paretoData.map((item, idx) => (\n                <tr key={idx} className={item.cumulativePercentage <= 80 ? \"bg-green-50\" : \"\"}>\n                  <td className=\"border p-2\">{item.group}</td>\n                  <td className=\"border p-2 text-right\">{item.frequency}</td>\n                  <td className=\"border p-2 text-right\">{item.percentage.toFixed(1)}%</td>\n                  <td className=\"border p-2 text-right\">{item.cumulativePercentage.toFixed(1)}%</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Descripción de Grupos</h2>\n        <ul className=\"list-disc list-inside\">\n          {Object.entries(groupDescriptions).map(([key, desc]) => (\n            <li key={key} className=\"mb-2\">\n              <strong>Grupo {key}:</strong> {desc}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1726, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { performAnalysis, AnalysisResult } from \"../lib/analysis\";\nimport { Dashboard } from \"../components/Dashboard\";\n\nexport default function Home() {\n  const [data, setData] = useState<any[] | null>(null);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      setError(\"\");\n      setIsLoading(true);\n      const file = e.target.files?.[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = async (evt) => {\n        try {\n          const bstr = evt.target?.result;\n          if (typeof bstr !== \"string\" && !(bstr instanceof ArrayBuffer)) {\n            throw new Error(\"Error al leer el archivo\");\n          }\n\n          const wb = XLSX.read(bstr, { type: \"binary\" });\n          const wsname = wb.SheetNames[0];\n          const ws = wb.Sheets[wsname];\n          const jsonData = XLSX.utils.sheet_to_json(ws, { defval: \"\" }) as Record<string, string>[];\n          \n          if (jsonData.length === 0) {\n            throw new Error(\"El archivo no contiene datos para analizar\");\n          }\n\n          // Verify required columns exist\n          const hasRequiredColumns = \"Motivo Pregunta 1\" in jsonData[0] || \n                                   \"encuesta de salida\" in jsonData[0] ||\n                                   \"Encuesta de salida 4FRH-209\" in jsonData[0];\n          \n          if (!hasRequiredColumns) {\n            throw new Error(\"El archivo debe contener las columnas 'Motivo Pregunta 1', 'encuesta de salida' o 'Encuesta de salida 4FRH-209'\");\n          }\n\n          console.log(\"Procesando datos:\", {\n            totalRows: jsonData.length,\n            columns: Object.keys(jsonData[0]),\n            sampleRow: jsonData[0]\n          });\n\n          setData(jsonData);\n          const result = performAnalysis(jsonData);\n          setAnalysisResult(result);\n        } catch (err) {\n          setError(err instanceof Error ? err.message : String(err));\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      reader.onerror = () => {\n        setError(\"Error al leer el archivo\");\n        setIsLoading(false);\n      };\n\n      reader.readAsBinaryString(file);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white text-black p-8 font-sans\">\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">Análisis de Rotación</h1>\n      \n      <div className=\"max-w-2xl mx-auto mb-8 p-6 bg-gray-50 rounded-lg shadow-sm\">\n        <h2 className=\"text-xl font-semibold mb-4\">Instrucciones</h2>\n        <ul className=\"list-disc list-inside space-y-2 text-gray-600\">\n          <li>Suba un archivo Excel (.xlsx o .xls)</li>\n          <li>El archivo debe contener al menos una de estas columnas:\n            <ul className=\"list-disc list-inside ml-4 mt-1\">\n              <li>'Motivo Pregunta 1'</li>\n              <li>'encuesta de salida'</li>\n              <li>'Encuesta de salida 4FRH-209'</li>\n            </ul>\n          </li>\n          <li>Para las encuestas de salida:\n            <ul className=\"list-disc list-inside ml-4 mt-1\">\n              <li>Se analizan respuestas numeradas (1., 2., 3., etc.)</li>\n              <li>Cada respuesta numerada se procesa por separado</li>\n              <li>Se agrupan respuestas por categorías semánticas:</li>\n            </ul>\n            <div className=\"grid grid-cols-2 gap-6 mt-4 ml-8 text-gray-600 bg-gray-50 p-4 rounded-lg\">\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Compensación:</p>\n                <p className=\"text-sm\">sueldo, salario, pago, prestaciones, beneficios</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Horario:</p>\n                <p className=\"text-sm\">jornada, turnos, tiempo, schedule</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Ambiente:</p>\n                <p className=\"text-sm\">clima laboral, entorno, equipo, compañeros</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Desarrollo:</p>\n                <p className=\"text-sm\">capacitación, formación, crecimiento, carrera</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Cuidado de hijos:</p>\n                <p className=\"text-sm\">familia, guardería, maternal</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Transporte:</p>\n                <p className=\"text-sm\">traslado, distancia, ubicación</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Salud:</p>\n                <p className=\"text-sm\">enfermedad, médico, tratamiento</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Estudios:</p>\n                <p className=\"text-sm\">universidad, escuela, educación</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Mejor oferta:</p>\n                <p className=\"text-sm\">otra empresa, competencia, oportunidad</p>\n              </div>\n              <div className=\"p-3 bg-white rounded-md shadow-sm\">\n                <p className=\"font-medium text-blue-700 mb-1\">Personal:</p>\n                <p className=\"text-sm\">mudanza, matrimonio, embarazo</p>\n              </div>\n            </div>\n          </li>\n          <li>Los datos serán analizados automáticamente al subir el archivo</li>\n          <li>Las respuestas se analizan por pregunta y se muestra un análisis general</li>\n          <li>Se destacan las categorías que representan más del 20% de las respuestas</li>\n        </ul>\n      </div>\n\n      <div className=\"mb-6 text-center\">\n        <label className=\"inline-block\">\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            disabled={isLoading}\n          />\n          <span className={`inline-flex items-center px-6 py-3 rounded-lg cursor-pointer\n            ${isLoading ? 'bg-gray-300' : 'bg-blue-600 hover:bg-blue-700'} \n            text-white font-medium transition-colors`}>\n            {isLoading ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Procesando archivo...\n              </>\n            ) : (\n              'Seleccionar archivo Excel'\n            )}\n          </span>\n        </label>\n      </div>\n\n      {error && (\n        <div className=\"max-w-2xl mx-auto mb-6\">\n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {analysisResult && <Dashboard analysis={analysisResult} />}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}