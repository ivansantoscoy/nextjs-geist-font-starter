{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/analysis.ts"],"sourcesContent":["interface Category {\n  name: string;\n  count: number;\n  percentage: number;\n  responses?: string[];\n}\n\nexport interface AnalysisResult {\n  clusteredData: any[];\n  paretoData: { group: string; frequency: number; percentage: number; cumulativePercentage: number }[];\n  groupDescriptions: Record<string, string>;\n  motivoAnalysis: {\n    total: number;\n    categories: Category[];\n  };\n  encuestaAnalysis: {\n    total: number;\n    categories: Category[];\n  };\n}\n\nfunction cleanText(text: string): string {\n  return text?.toString().trim().toLowerCase() || '';\n}\n\nfunction splitNumberedResponses(text: string): string[] {\n  if (!text) return [];\n  \n  // Match patterns like \"1.\", \"2.\", etc., followed by text\n  const responses = text.split(/\\d+\\.\\s*/).filter(Boolean);\n  return responses.map(r => r.trim()).filter(r => r.length > 0);\n}\n\n// Semantic categories for common terms\nconst semanticCategories: Record<string, string[]> = {\n  'sueldo': ['sueldo', 'salario', 'pago', 'remuneración', 'compensación', 'aumento', 'incremento', 'subir'],\n  'horario': ['horario', 'hora', 'tiempo', 'jornada', 'turno', 'schedule'],\n  'ambiente': ['ambiente', 'clima', 'entorno', 'trabajo', 'laboral', 'equipo'],\n  'beneficios': ['beneficios', 'prestaciones', 'seguro', 'bonos', 'incentivos', 'compensaciones'],\n  'capacitación': ['capacitación', 'entrenamiento', 'desarrollo', 'crecimiento', 'aprendizaje', 'formación'],\n  'liderazgo': ['liderazgo', 'jefe', 'supervisor', 'gerente', 'líder', 'gestión', 'administración'],\n  'comunicación': ['comunicación', 'información', 'feedback', 'retroalimentación', 'diálogo'],\n  'personal': ['personal', 'familiar', 'salud', 'enfermedad', 'mudanza', 'cambio de residencia']\n};\n\nfunction findSemanticCategory(text: string): string | null {\n  for (const [category, terms] of Object.entries(semanticCategories)) {\n    if (terms.some(term => text.includes(term))) {\n      return category;\n    }\n  }\n  return null;\n}\n\nfunction groupSimilarTexts(texts: string[]): Map<string, string[]> {\n  const groups = new Map<string, string[]>();\n  \n  texts.forEach(text => {\n    if (!text) return;\n    \n    // Try to find semantic category first\n    const category = findSemanticCategory(text);\n    if (category) {\n      if (!groups.has(category)) {\n        groups.set(category, []);\n      }\n      groups.get(category)!.push(text);\n      return;\n    }\n    \n    // If no semantic category found, try to find similar text\n    let found = false;\n    for (const [key, group] of groups.entries()) {\n      if (text.includes(key) || key.includes(text)) {\n        group.push(text);\n        found = true;\n        break;\n      }\n    }\n    \n    if (!found) {\n      groups.set(text, [text]);\n    }\n  });\n  \n  return groups;\n}\n\nexport function performAnalysis(data: any[]): AnalysisResult {\n  // Process Motivo Pregunta 1\n  const motivos = data\n    .map(row => cleanText(row[\"Motivo Pregunta 1\"]))\n    .filter(Boolean);\n  \n  const motivoGroups = groupSimilarTexts(motivos);\n  const motivoCategories = Array.from(motivoGroups.entries()).map(([key, texts]) => ({\n    name: key,\n    count: texts.length,\n    percentage: (texts.length / motivos.length) * 100\n  })).sort((a, b) => b.count - a.count);\n\n  // Process encuesta de salida with numbered responses\n  const encuestas = data\n    .map(row => {\n      const rawText = row[\"encuesta de salida\"] || row[\"Encuesta de salida 4FRH-209\"];\n      if (!rawText) return [];\n      return splitNumberedResponses(cleanText(rawText));\n    })\n    .flat()\n    .filter(Boolean);\n\n  // Group responses by number and analyze each group\n  const encuestaGroups = groupSimilarTexts(encuestas);\n  const encuestaCategories = Array.from(encuestaGroups.entries()).map(([key, texts]) => ({\n    name: key,\n    count: texts.length,\n    percentage: (texts.length / encuestas.length) * 100,\n    responses: texts // Keep track of individual responses\n  })).sort((a, b) => b.count - a.count);\n\n  // Create clusters based on combined analysis\n  const allPhrases = [...new Set([...motivos, ...encuestas])];\n  const clusters: Record<number, string[]> = {};\n  \n  allPhrases.forEach((phrase, index) => {\n    const key = index % 5; // Distribute into 5 clusters\n    if (!clusters[key]) clusters[key] = [];\n    clusters[key].push(phrase);\n  });\n\n  // Map phrases to clusters\n  const phraseToCluster: Record<string, number> = {};\n  Object.entries(clusters).forEach(([key, phrases]) => {\n    phrases.forEach(phrase => {\n      phraseToCluster[phrase] = Number(key);\n    });\n  });\n\n  // Add cluster info to data\n  const clusteredData = data.map(row => {\n    const motivo = cleanText(row[\"Motivo Pregunta 1\"]);\n    const encuesta = cleanText(row[\"encuesta de salida\"] || row[\"Encuesta de salida 4FRH-209\"]);\n    const cluster = phraseToCluster[motivo] ?? phraseToCluster[encuesta] ?? -1;\n    return { ...row, Cluster: cluster };\n  });\n\n  // Create group descriptions\n  const groupDescriptions: Record<string, string> = {};\n  Object.entries(clusters).forEach(([key, phrases]) => {\n    groupDescriptions[key] = phrases.slice(0, 2).join(\", \");\n  });\n\n  // Map group descriptions to rows\n  clusteredData.forEach(row => {\n    row[\"Grupo Descriptivo\"] = groupDescriptions[row.Cluster] || \"Sin Grupo\";\n  });\n\n  // Pareto analysis\n  const frequencyMap: Record<string, number> = {};\n  clusteredData.forEach(row => {\n    const group = row[\"Grupo Descriptivo\"];\n    frequencyMap[group] = (frequencyMap[group] || 0) + 1;\n  });\n\n  const total = clusteredData.length;\n  const paretoData = Object.entries(frequencyMap)\n    .map(([group, freq]) => ({\n      group,\n      frequency: freq,\n      percentage: (freq / total) * 100,\n      cumulativePercentage: 0\n    }))\n    .sort((a, b) => b.frequency - a.frequency);\n\n  let cumulative = 0;\n  paretoData.forEach(item => {\n    cumulative += item.percentage;\n    item.cumulativePercentage = cumulative;\n  });\n\n  return {\n    clusteredData,\n    paretoData,\n    groupDescriptions,\n    motivoAnalysis: {\n      total: motivos.length,\n      categories: motivoCategories\n    },\n    encuestaAnalysis: {\n      total: encuestas.length,\n      categories: encuestaCategories\n    }\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { AnalysisResult } from \"../lib/analysis\";\n\ninterface DashboardProps {\n  analysis: AnalysisResult;\n}\n\nexport const Dashboard: React.FC<DashboardProps> = ({ analysis }) => {\n  const { paretoData, groupDescriptions, motivoAnalysis, encuestaAnalysis } = analysis;\n\n  return (\n    <div className=\"max-w-6xl mx-auto space-y-8\">\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Análisis de Motivos de Rotación</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr className=\"bg-gray-100\">\n                <th className=\"border p-2 text-left\">Motivo</th>\n                <th className=\"border p-2 text-right\">Cantidad</th>\n                <th className=\"border p-2 text-right\">Porcentaje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {motivoAnalysis.categories.map((category, idx) => (\n                <tr key={idx} className={category.percentage >= 20 ? \"bg-yellow-50\" : \"\"}>\n                  <td className=\"border p-2\">{category.name}</td>\n                  <td className=\"border p-2 text-right\">{category.count}</td>\n                  <td className=\"border p-2 text-right\">{category.percentage.toFixed(1)}%</td>\n                </tr>\n              ))}\n              <tr className=\"font-semibold bg-gray-50\">\n                <td className=\"border p-2\">Total</td>\n                <td className=\"border p-2 text-right\">{motivoAnalysis.total}</td>\n                <td className=\"border p-2 text-right\">100%</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Análisis de Encuestas de Salida</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr className=\"bg-gray-100\">\n                <th className=\"border p-2 text-left\">Comentario</th>\n                <th className=\"border p-2 text-right\">Cantidad</th>\n                <th className=\"border p-2 text-right\">Porcentaje</th>\n              </tr>\n            </thead>\n            <tbody>\n              {encuestaAnalysis.categories.map((category, idx) => (\n                <React.Fragment key={idx}>\n                  <tr className={category.percentage >= 20 ? \"bg-yellow-50\" : \"\"}>\n                    <td className=\"border p-2\">\n                      <div className=\"font-medium capitalize text-blue-700\">\n                        {category.name}\n                      </div>\n                      {category.responses && category.responses.length > 0 && (\n                        <div className=\"text-sm text-gray-600 mt-2 space-y-1\">\n                          <div className=\"font-medium text-gray-700 mb-1\">Respuestas relacionadas:</div>\n                          {category.responses.map((response, i) => (\n                            <div key={i} className=\"ml-3 flex items-start\">\n                              <span className=\"mr-2\">•</span>\n                              <span className=\"flex-1\">{response}</span>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"border p-2 text-right align-top\">\n                      <span className=\"font-medium\">{category.count}</span>\n                    </td>\n                    <td className=\"border p-2 text-right align-top\">\n                      <span className=\"font-medium\">{category.percentage.toFixed(1)}%</span>\n                    </td>\n                  </tr>\n                </React.Fragment>\n              ))}\n              <tr className=\"font-semibold bg-gray-50\">\n                <td className=\"border p-2\">Total</td>\n                <td className=\"border p-2 text-right\">{encuestaAnalysis.total}</td>\n                <td className=\"border p-2 text-right\">100%</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Análisis de Pareto</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr className=\"bg-gray-100\">\n                <th className=\"border p-2 text-left\">Grupo</th>\n                <th className=\"border p-2 text-right\">Frecuencia</th>\n                <th className=\"border p-2 text-right\">Porcentaje</th>\n                <th className=\"border p-2 text-right\">Porcentaje Acumulado</th>\n              </tr>\n            </thead>\n            <tbody>\n              {paretoData.map((item, idx) => (\n                <tr key={idx} className={item.cumulativePercentage <= 80 ? \"bg-green-50\" : \"\"}>\n                  <td className=\"border p-2\">{item.group}</td>\n                  <td className=\"border p-2 text-right\">{item.frequency}</td>\n                  <td className=\"border p-2 text-right\">{item.percentage.toFixed(1)}%</td>\n                  <td className=\"border p-2 text-right\">{item.cumulativePercentage.toFixed(1)}%</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <section className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Descripción de Grupos</h2>\n        <ul className=\"list-disc list-inside\">\n          {Object.entries(groupDescriptions).map(([key, desc]) => (\n            <li key={key} className=\"mb-2\">\n              <strong>Grupo {key}:</strong> {desc}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { performAnalysis, AnalysisResult } from \"../lib/analysis\";\nimport { Dashboard } from \"../components/Dashboard\";\n\nexport default function Home() {\n  const [data, setData] = useState<any[] | null>(null);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      setError(\"\");\n      setIsLoading(true);\n      const file = e.target.files?.[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = async (evt) => {\n        try {\n          const bstr = evt.target?.result;\n          if (typeof bstr !== \"string\" && !(bstr instanceof ArrayBuffer)) {\n            throw new Error(\"Error al leer el archivo\");\n          }\n\n          const wb = XLSX.read(bstr, { type: \"binary\" });\n          const wsname = wb.SheetNames[0];\n          const ws = wb.Sheets[wsname];\n          const jsonData = XLSX.utils.sheet_to_json(ws, { defval: \"\" }) as Record<string, string>[];\n          \n          if (jsonData.length === 0) {\n            throw new Error(\"El archivo no contiene datos para analizar\");\n          }\n\n          // Verify required columns exist\n          const hasRequiredColumns = \"Motivo Pregunta 1\" in jsonData[0] || \n                                   \"encuesta de salida\" in jsonData[0] ||\n                                   \"Encuesta de salida 4FRH-209\" in jsonData[0];\n          \n          if (!hasRequiredColumns) {\n            throw new Error(\"El archivo debe contener las columnas 'Motivo Pregunta 1', 'encuesta de salida' o 'Encuesta de salida 4FRH-209'\");\n          }\n\n          console.log(\"Procesando datos:\", {\n            totalRows: jsonData.length,\n            columns: Object.keys(jsonData[0]),\n            sampleRow: jsonData[0]\n          });\n\n          setData(jsonData);\n          const result = performAnalysis(jsonData);\n          setAnalysisResult(result);\n        } catch (err) {\n          setError(err instanceof Error ? err.message : String(err));\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      reader.onerror = () => {\n        setError(\"Error al leer el archivo\");\n        setIsLoading(false);\n      };\n\n      reader.readAsBinaryString(file);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white text-black p-8 font-sans\">\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">Análisis de Rotación</h1>\n      \n      <div className=\"max-w-2xl mx-auto mb-8 p-6 bg-gray-50 rounded-lg shadow-sm\">\n        <h2 className=\"text-xl font-semibold mb-4\">Instrucciones</h2>\n        <ul className=\"list-disc list-inside space-y-2 text-gray-600\">\n          <li>Suba un archivo Excel (.xlsx o .xls)</li>\n          <li>El archivo debe contener al menos una de estas columnas:\n            <ul className=\"list-disc list-inside ml-4 mt-1\">\n              <li>'Motivo Pregunta 1'</li>\n              <li>'encuesta de salida'</li>\n              <li>'Encuesta de salida 4FRH-209'</li>\n            </ul>\n          </li>\n          <li>Para las encuestas de salida:\n            <ul className=\"list-disc list-inside ml-4 mt-1\">\n              <li>Se analizan respuestas numeradas (1., 2., 3., etc.)</li>\n              <li>Cada respuesta numerada se procesa por separado</li>\n              <li>Se agrupan respuestas por categorías semánticas:\n                <ul className=\"list-disc list-inside ml-4 mt-1 text-gray-600\">\n                  <li>Sueldo: salario, pago, remuneración, aumentos</li>\n                  <li>Horario: jornada, turnos, tiempo</li>\n                  <li>Ambiente: clima laboral, entorno, equipo</li>\n                  <li>Beneficios: prestaciones, bonos, incentivos</li>\n                  <li>Otros aspectos relevantes</li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>Los datos serán analizados automáticamente al subir el archivo</li>\n        </ul>\n      </div>\n\n      <div className=\"mb-6 text-center\">\n        <label className=\"inline-block\">\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            disabled={isLoading}\n          />\n          <span className={`inline-flex items-center px-6 py-3 rounded-lg cursor-pointer\n            ${isLoading ? 'bg-gray-300' : 'bg-blue-600 hover:bg-blue-700'} \n            text-white font-medium transition-colors`}>\n            {isLoading ? (\n              <>\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Procesando archivo...\n              </>\n            ) : (\n              'Seleccionar archivo Excel'\n            )}\n          </span>\n        </label>\n      </div>\n\n      {error && (\n        <div className=\"max-w-2xl mx-auto mb-6\">\n          <div className=\"bg-red-50 border-l-4 border-red-500 p-4\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm text-red-700\">{error}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {analysisResult && <Dashboard analysis={analysisResult} />}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}